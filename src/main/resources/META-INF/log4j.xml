<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration>

	<!-- 将日志信息输出到控制台 -->
	<appender name="ConsoleAppender" class="org.apache.log4j.ConsoleAppender">
		<param name="Threshold" value="INFO"/>
		<param name="Target" value="System.out"/>
		<param name="Encoding" value="GBK"/>
		<!-- 设置日志输出的样式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<!-- 设置日志输出的格式 -->
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5p] [method:%l]%n%m%n%n" />
		</layout>
	</appender>


	<!-- 将日志信息输出到文件，可以配置多久产生一个新的日志信息文件 -->
	<appender name="DailyRollingFileAppender" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="Threshold" value="INFO"/>
		<param name="Encoding" value="UTF-8"/>
		<!-- 设置日志信息输出文件全路径名 -->
		<param name="File" value="G:/logs/s2erver.log" />
		<!-- 设置日志每分钟回滚一次，即产生一个新的日志文件 -->
		<param name="DatePattern" value="'.'yyyy-MM-dd-HH'.log'" />
		<!-- 设置日志输出的样式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<!-- 设置日志输出的格式 -->
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH\:mm\:ss,SSS}][%p][%c{1}] %m%n" />
		</layout>
	</appender>

	<!-- 将日志输出到kafka -->
	<!--<appender name="kafkaAppender" class="org.apache.kafka.log4jappender.KafkaLog4jAppender">-->
	<!--<appender name="kafkaAppender" class="com.ez.log.MyKafkaLog4jAppender">
		<param name="Threshold" value="DEBUG"/>
		<param name="Encoding" value="UTF-8"/>
		&lt;!&ndash;<param name="brokerList" value="0.0.0.0:9093"/>&ndash;&gt;
		&lt;!&ndash;<param name="syncSend" value="false"/>&ndash;&gt;
		&lt;!&ndash;<param name="retries" value="3"/>&ndash;&gt;
		&lt;!&ndash;<param name="requiredNumAcks" value="0"/>&ndash;&gt;
		&lt;!&ndash;<param name="compressionType" value="none"/>&ndash;&gt;
		&lt;!&ndash;<param name="topic" value="kafka-log4j"/>&ndash;&gt;
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5p] [method:%l]%n%m%n%n" />
		</layout>
	</appender>-->

	<logger name="org.hibernate" additivity="false">
		<level value ="DEBUG"/>
		<!--<appender-ref ref="kafkaAppender"/>-->
		<appender-ref ref="ConsoleAppender"/>

	</logger>


	<!--
     注意：
     1：当additivity="false"时，root中的配置就失灵了，不遵循缺省的继承机制
     2：logger中的name非常重要，它代表记录器的包的形式，有一定的包含关系，试验表明
        2-1：当定义的logger的name同名时，只有最后的那一个才能正确的打印日志
        2-2：当对应的logger含有包含关系时，比如：name=test.log4j.test8 和 name=test.log4j.test8.UseLog4j，则2-1的情况是一样的
        2-3：logger的name表示所有的包含在此名的所有记录器都遵循同样的配置，name的值中的包含关系是指记录器的名称哟！注意啦！
     3：logger中定义的level和appender中的filter定义的level的区间取交集
     4：如果appender中的filter定义的 levelMin > levelMax ，则打印不出日志信息
     -->

	<!-- 指定logger的设置，additivity指示是否遵循缺省的继承机制-->
	<!--<logger name="test.log4j.test8.UseLog4j" additivity="false">-->
		<!--<level value ="WARN"/>-->
		<!--<appender-ref ref="DailyRollingFileAppender"/>-->
	<!--</logger>-->


	<!-- 根logger的设置-->
	<root>
		<level value ="INFO"/>
		<appender-ref ref="ConsoleAppender"/>
		<!--<appender-ref ref="DailyRollingFileAppender"/>-->
		<!--<appender-ref ref="kafkaAppender"/>-->
	</root>

</log4j:configuration>